cmake_minimum_required(VERSION 3.20)
project(DatabaseEngine CXX)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

if(MSVC)
    add_compile_options(/std:c++20)
    add_compile_options(/Zc:__cplusplus)
    add_compile_options(/permissive-)

    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /O2 /Ob3 /GL /Oi /Ot /Oy /fp:fast")
    set(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} /LTCG")

    add_compile_options(/utf-8)

    add_compile_options(/MP)

    add_compile_options(/arch:AVX2)

    add_definitions(-D_CRT_SECURE_NO_WARNINGS)
    add_definitions(-D_SILENCE_CXX17_ALLOCATOR_VOID_DEPRECATION_WARNING)

    set_property(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY INTERPROCEDURAL_OPTIMIZATION_RELEASE TRUE)
endif()
if(WIN32)
    add_definitions(-D_WIN32_WINNT=0x0A00)
endif()

include(FetchContent)

FetchContent_Declare(
        nlohmann_json
        GIT_REPOSITORY https://github.com/nlohmann/json.git
        GIT_TAG v3.11.2
)
FetchContent_MakeAvailable(nlohmann_json)

set(QUERY_ENGINE_SOURCES
        src/query_engine/lexer.cpp
        src/query_engine/parser.cpp
        src/query_engine/executor.cpp
)


option(BUILD_WEB_SERVER "Build web server with Crow" OFF)

if(BUILD_WEB_SERVER)
    message(STATUS "Web server is enabled. Building 'database_server' executable.")

    FetchContent_Declare(
            asio
            GIT_REPOSITORY https://github.com/chriskohlhoff/asio.git
            GIT_TAG asio-1-28-0
    )
    FetchContent_MakeAvailable(asio)

    set(ASIO_INCLUDE_DIR ${asio_SOURCE_DIR}/asio/include)

    FetchContent_Declare(
            crow
            GIT_REPOSITORY https://github.com/CrowCpp/Crow.git
            GIT_TAG master
    )
    set(CROW_BUILD_EXAMPLES OFF CACHE BOOL "" FORCE)
    set(CROW_BUILD_TESTS OFF CACHE BOOL "" FORCE)
    set(CROW_BUILD_DOCS OFF CACHE BOOL "" FORCE)

    FetchContent_MakeAvailable(crow)

    add_executable(database_server
            src/main.cpp
            src/api/database_manager.cpp
            src/api/json_handler.cpp
            src/api/http_server.cpp
            ${QUERY_ENGINE_SOURCES}
            src/storage/OptimizedInMemoryStorage.cpp
            src/utils/activity_logger.cpp
    )

    target_include_directories(database_server
            PRIVATE
            ${CMAKE_CURRENT_SOURCE_DIR}/include
            ${ASIO_INCLUDE_DIR}
    )

    target_link_libraries(database_server
            PRIVATE
            Crow::Crow
            nlohmann_json::nlohmann_json
    )

    if(MSVC)
        set_property(TARGET database_server PROPERTY INTERPROCEDURAL_OPTIMIZATION_RELEASE TRUE)
        target_compile_options(database_server PRIVATE
                $<$<CONFIG:Release>:/O2>
                $<$<CONFIG:Release>:/Ob3>
                $<$<CONFIG:Release>:/GL>
        )
    endif()

    if(WIN32)
        target_link_libraries(database_server PRIVATE ws2_32 wsock32)
    endif()

endif()
